---

- name: Install apt-packages (desktop)
  apt:
    pkg:
    - unclutter
    - lxde
    - xdotool
    - cec-utils
  when: host_type == "desktop" or host_type == "laptop"
  become: true
  tags: kiosk

- name: Install apt-packages (lite)
  apt:
    install_recommends: yes
    pkg:
    - xserver-xorg
    - x11-xserver-utils
    - xinit
    - openbox
    - xdotool
    - chromium-browser
    - cec-utils
  when: host_type == "lite"
  become: true
  tags: kiosk

- name: Place out files (lite)
  copy: src={{ item.src }} dest={{ item.dest }} mode={{ item.mode }}
  with_items:
    - { src: '.bash_profile', dest: '~/', mode: u+rw}
  when: host_type == "lite"
  tags: kiosk

- name: Place out script files
  copy: src={{ item.src }} dest={{ item.dest }} mode={{ item.mode }}
  with_items:
    - { src: 'get-serial.py', dest: '~/', mode: u+rwx }
    - { src: 'reload-script.py', dest: '~/', mode: u+rwx }
  when: cron_check_minute is defined
  tags: kiosk

- name: Get Device id
  command: ~/get-serial.py
  register: device_id
  when: cron_check_minute is defined
  tags: kiosk

- name: Set Device id in html file
  template:
    src: ../templates/show-id.html
    dest: ~/
  when: cron_check_minute is defined
  tags: kiosk

- name: Customize /etc/environment
  lineinfile:
    dest: /etc/environment
    state: present
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value }}"
  with_items: "{{ kiosk_env }}"
  become: true
  when: cron_check_minute is defined
  tags: kiosk

- name: Set iframe url to index.html
  template:
    src: ../templates/index.html
    dest: ~/
  when: kiosk_iframe_url is defined
  tags: kiosk

- name: Update autostart file (desktop)
  blockinfile:
    path: /etc/xdg/lxsession/LXDE-pi/autostart
    block: |
      @xset s off
      @xset -dpms
      @xset s noblank
      @sed -i 's/"exited_cleanly": false/"exited_cleanly": true/' ~/.config/chromium/Default/Preferences
      @chromium-browser {{ kiosk_url if (kiosk_url is defined) else index_url }} --kiosk --noerrdialogs --disable-features=TranslateUI --check-for-update-interval=1 --simulate-critical-update --disable-gpu-compositing
  when: host_type == "desktop"
  become: true
  tags: kiosk

- name: Update autostart file (lite)
  blockinfile:
    path: /etc/xdg/openbox/autostart
    block: |
      xset s off
      xset -dpms
      xset s noblank
      sed -i 's/"exited_cleanly": false/"exited_cleanly": true/' ~/.config/chromium/Default/Preferences
      chromium-browser {{ kiosk_url if (kiosk_url is defined) else index_url }} --kiosk --noerrdialogs --disable-features=TranslateUI --check-for-update-interval=1 --simulate-critical-update --disable-gpu-compositing
  when: host_type == "lite"
  become: true
  tags: kiosk

- name: Update autostart file (laptop)
  blockinfile:
    path: /etc/xdg/lxsession/LXDE-pi/autostart
    block: |
      @xset s off
      @xset -dpms
      @xset s noblank
      @sed -i 's/"exited_cleanly": false/"exited_cleanly": true/' ~/.config/chromium/Default/Preferences
      @chromium {{ kiosk_url if (kiosk_url is defined) else index_url }} --kiosk --noerrdialogs --disable-features=TranslateUI --check-for-update-interval=1 --simulate-critical-update
  when: host_type == "laptop"
  become: true
  tags: kiosk

- name: Add cron job for 'new experience' check
  cron:
    name: New experience cron check.
    # job: "~/reload-script.py > /dev/null 2>&1"
    job: "~/reload-script.py >> ~/cron.log"
    minute: "{{ cron_check_minute }}"
  when: cron_check_minute is defined
  tags: kiosk

- name: Add cron job for 'reboot' check
  cron:
    name: New reboot cron check.
    # job: "~/reload-script.py --time 60 > /dev/null 2>&1"
    job: "~/reload-script.py --time 60 >> ~/cron.log"
    special_time: "reboot"
  when: cron_check_minute is defined
  tags: kiosk

- name: Unconditionally reboot
  reboot:
    msg: "Reboot initiated by Ansible"
    reboot_timeout: 600
  become: true
  tags: kiosk

...
